import org.jmailen.gradle.kotlinter.tasks.FormatTask
import org.jmailen.gradle.kotlinter.tasks.LintTask

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def repoRootPath = projectDir.absoluteFile.parentFile.absolutePath
def extraAssetsDirectory = "$project.buildDir/extraAssets"
def extraJniDirectory = "$project.buildDir/extraJni"

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "net.mullvad.mullvadvpn"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 201901
        versionName "2019.1"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    sourceSets {
        main {
            assets {
                srcDirs = files(extraAssetsDirectory)
            }

            jniLibs {
                srcDirs = files(extraJniDirectory)
            }
        }
    }

    applicationVariants.all { variant ->
        variant.mergeAssetsProvider.configure {
            dependsOn copyApiRootCertificate
        }

        variant.ndkCompileProvider.configure {
            dependsOn copyMullvadJni
        }
    }
}

repositories {
    jcenter()
    google()
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.21'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
}

buildscript {
    repositories {
        jcenter()
        google()

        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.20'
        classpath 'org.jmailen.gradle:kotlinter-gradle:1.22.0'
    }
}

task lintKotlin(type: LintTask, group: 'verification') {
    source files('src/main/kotlin')
    reports = [
        'plain': file('build/reports/kotlin-lint-report.txt'),
    ]
}

task format(type: FormatTask, group: 'formatting') {
    source files('src/main/kotlin')
    report file('build/reports/kotlin-format-report.txt')
}

lint.dependsOn lintKotlin

task copyMullvadJni(type: Copy) {
    from "$repoRootPath/target/aarch64-linux-android/debug"
    include 'libmullvad_jni.so'
    into "$extraJniDirectory/arm64-v8a"
}

task copyApiRootCertificate(type: Copy) {
    from "$repoRootPath/dist-assets"
    include "api_root_ca.pem"
    into extraAssetsDirectory
}
